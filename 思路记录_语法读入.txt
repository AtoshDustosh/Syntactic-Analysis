以下面的语法为例：
	DEFINE -> proc DATATYPE { PROGRAM  } | DATATYPE id ; | record id { PROGRAM } ;
格式特点：
	- 所有的产生式都只占一行
	- 非终结符语法符号————大写字母与连字符的组合
	- 特殊意义的语法符号（实际上主要是终结符）————小写字母组合或是特殊符号
	- 语法符号之间用空格或制表符间隔
	- "->" 表示产生式的箭头
	- "|" 表示语法中的“或”
	- 如果遇到了 "//"，则本行它后面的内容均为注释

关于终结符以及一些特殊符号的识别
	- 如果是关键字或是类似“{”一样的符号的话，语法分析过程中可以根据种别码进行匹配
	- 如果是“|”这个表示产生式中的“or”的符号，语法分析过程中就需要产生产生式的分支
	- 如果是“digit” “id”这种特殊意义的，表示一类数据的符号。。。也可以根据种别码进行匹配
综上，可以根据种别码匹配的终结符，直接对应种别码。
对应不上的如果还不是表示“or”的话，就说明产生式出错了。
但由于产生式中的“|”与种别码中的“|”恰好重复，意义却不同，所以还是得做一个语法终结符到种别码的转换器

不过这个转换器是在任务4中工作的，也就是在通过语法分析表读入token序列分析的时候，因此暂时不用管它

