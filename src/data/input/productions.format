PROGRAM -> DEFINE PROGRAM | ASSIGNMENT PROGRAM | CONTROL PROGRAM | PROCEDURE_CALL PROGRAM | empty

DEFINE -> proc DATATYPE { PROGRAM  } | DATATYPE id ; | record id { PROGRAM } ;
DATATYPE -> SINGLE_TYPE ARRAY_SUFFIX 
SINGLE_TYPE -> int | double | boolean 
ARRAY_SUFFIX -> [ number ] ARRAY_SUFFIX | empty

ASSIGNMENT -> id = EXPRESSION ; | ARRAY_ELEMENT = EXPRESSION ;
EXPRESSION -> EXPRESSION ARITHMETIC_OP_DUAL EXPRESSION | EXPRESSION ARITHMETIC_OP_SING_SUFFIX | ( EXPRESSION ) | id | number | ARRAY_ELEMENT | empty
ARRAY_ELEMENT -> id [ EXPRESSION ] | ARRAY_ELEMENT [ EXPRESSION ]

ARITHMETIC_OP_DUAL -> + | - | * | / | %
ARITHMETIC_OP_SING_SUFFIX -> ++ | --

CONTROL -> if CONDITION then { PROGRAM } | if CONDITION then { PROGRAM } else { PROGRAM } | while CONDITION do { PROGRAM } ;
CONDITION -> CONDITION LOGIC_OP_DUAL CONDITION | LOGIC_OP_SING_PREFIX CONDITION | ( CONDITION ) | EXPRESSION RELOP EXPRESSION | true | false

LOGIC_OP_DUAL -> & | \| | ^ | && | \|\|	// expression of the vertical bar is "\|"
LOGIC_OP_SING_PREFIX -> ~ | !
RELOP -> > | < | >= | <= | == | !=

PROCEDURE_CALL -> call id ( ELIST ) ;
ELIST -> ELIST , EXPRESSION
ELIST -> EXPRESSION

// this is the end of the file